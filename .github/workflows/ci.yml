# More information can be found here:
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

###################################################################################################
# Workflow name
###################################################################################################

# standard name for CI workflow
name: CI

###################################################################################################
# When to run the workflow
###################################################################################################

# perform CI only on main branch
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


###################################################################################################
# environment variables
###################################################################################################

# more information can be found at https://doc.rust-lang.org/cargo/reference/environment-variables.html
env:
  # Controls whether or not colored output is used in the terminal.
  CARGO_TERM_COLOR: always # always: Always display colors.
  # Make sure CI fails on all warnings, including Clippy lints
  # RUSTFLAGS: "-Dwarnings" this cannot be enabled since some libs have warnings

###################################################################################################
# jobs
###################################################################################################

jobs:

  #################################################################################################
  # MacOs job
  #################################################################################################

  ubuntu:
    name: Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 4
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build
      - run: cargo build --release

  #################################################################################################
  # MacOs job
  #################################################################################################

  mac-os:
    name: MacOS
    runs-on: macos-latest
    timeout-minutes: 4
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build
      - run: cargo build --release

  #################################################################################################
  # Clang in Ubuntu
  #################################################################################################

#   clang-in-ubuntu:
#     name: Clang in Ubuntu
#     runs-on: ubuntu-latest
#     timeout-minutes: 4
#     steps:
#       - uses: actions/checkout@v3
#       - uses: dtolnay/rust-toolchain@stable
#       - run: export CXX=clang++
#       - run: cargo build
#       - run: cargo build --release

  #################################################################################################
  # LLD in Ubuntu
  #################################################################################################

#   lld-in-ubuntu:
#     name: LLD in Ubuntu
#     runs-on: ubuntu-latest
#     timeout-minutes: 4
#     steps:
#       - uses: actions/checkout@v3
#       - uses: dtolnay/rust-toolchain@stable
#       - run: export RUSTFLAGS="-C link-arg=-fuse-ld=lld"
#       - run: cargo build
#       - run: cargo build --release

  #################################################################################################
  # Chainging linker entirely
  #################################################################################################

#   chainging-linker-entirely:
#     name: Chainging linker entirely
#     runs-on: ubuntu-latest
#     timeout-minutes: 4
#     steps:
#       - uses: actions/checkout@v3
#       - uses: dtolnay/rust-toolchain@stable
#       - run: export RUSTFLAGS="-C linker=g++"
#       - run: export CXX=g++
#       - run: cargo build
#       - run: cargo build --release


